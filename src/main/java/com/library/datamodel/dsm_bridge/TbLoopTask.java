package com.library.datamodel.dsm_bridge;
// default package
// Generated Dec 17, 2016 3:56:53 PM by Hibernate Tools 4.3.5.Final

import com.library.sgsharedinterface.TaskDBInterface;
import java.io.Serializable;
import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.AttributeOverride;
import javax.persistence.AttributeOverrides;
import javax.persistence.Column;
import javax.persistence.EmbeddedId;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * TbLoopTask generated by hbm2java
 */
@Entity
@Table(name = "tb_loop_task")
public class TbLoopTask implements  Serializable, TaskDBInterface {

    @Override
    public String toString() {
        return "TbLoopTask{" + "id=" + id + ", tbCustomer=" + tbCustomer + ", name=" + name + ", descp=" + descp + ", taskVersion=" + taskVersion + ", fileVersion=" + fileVersion + ", playVersion=" + playVersion + ", strategyVersion=" + strategyVersion + ", state=" + state + ", createTime=" + createTime + ", createUser=" + createUser + '}';
    }

    private static final long serialVersionUID = -5068398776832701893L;

	private TbLoopTaskId id;
	private TbCustomer tbCustomer;
	private String name;
	private String descp;
	private Date taskVersion;
	private Date fileVersion;
	private Date playVersion;
	private Date strategyVersion;
	private int state;
	private Date createTime;
	private String createUser;
	private Set<TbLoopProgram> tbLoopPrograms = new HashSet<TbLoopProgram>(0);
	private Set<TbLoopSource> tbLoopSources = new HashSet<TbLoopSource>(0);
	private Set<TbStrategy> tbStrategies = new HashSet<TbStrategy>(0);
	private Set<TbTerminal> tbTerminals = new HashSet<TbTerminal>(0);

	public TbLoopTask() {
	}

	public TbLoopTask(TbLoopTaskId id, TbCustomer tbCustomer, String name, String descp, Date taskVersion,
			Date fileVersion, Date playVersion, Date strategyVersion, int state, Date createTime, String createUser) {
		this.id = id;
		this.tbCustomer = tbCustomer;
		this.name = name;
		this.descp = descp;
		this.taskVersion = taskVersion;
		this.fileVersion = fileVersion;
		this.playVersion = playVersion;
		this.strategyVersion = strategyVersion;
		this.state = state;
		this.createTime = createTime;
		this.createUser = createUser;
	}

	public TbLoopTask(TbLoopTaskId id, TbCustomer tbCustomer, String name, String descp, Date taskVersion,
			Date fileVersion, Date playVersion, Date strategyVersion, int state, Date createTime, String createUser,
			Set<TbLoopProgram> tbLoopPrograms, Set<TbLoopSource> tbLoopSources, Set<TbStrategy> tbStrategies,
			Set<TbTerminal> tbTerminals) {
		this.id = id;
		this.tbCustomer = tbCustomer;
		this.name = name;
		this.descp = descp;
		this.taskVersion = taskVersion;
		this.fileVersion = fileVersion;
		this.playVersion = playVersion;
		this.strategyVersion = strategyVersion;
		this.state = state;
		this.createTime = createTime;
		this.createUser = createUser;
		this.tbLoopPrograms = tbLoopPrograms;
		this.tbLoopSources = tbLoopSources;
		this.tbStrategies = tbStrategies;
		this.tbTerminals = tbTerminals;
	}

	@EmbeddedId

	@AttributeOverrides({ @AttributeOverride(name = "cstmId", column = @Column(name = "CSTM_ID", nullable = false)),
			@AttributeOverride(name = "taskId", column = @Column(name = "TASK_ID", nullable = false)) })
	public TbLoopTaskId getId() {
		return this.id;
	}

	public void setId(TbLoopTaskId id) {
		this.id = id;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "CSTM_ID", nullable = false, insertable = false, updatable = false)
	public TbCustomer getTbCustomer() {
		return this.tbCustomer;
	}

	public void setTbCustomer(TbCustomer tbCustomer) {
		this.tbCustomer = tbCustomer;
	}

	@Column(name = "NAME", nullable = false, length = 64)
	public String getName() {
		return this.name;
	}

	public void setName(String name) {
		this.name = name;
	}

	@Column(name = "DESCP", nullable = false, length = 256)
	public String getDescp() {
		return this.descp;
	}

	public void setDescp(String descp) {
		this.descp = descp;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "TASK_VERSION", nullable = false, length = 19)
	public Date getTaskVersion() {
		return this.taskVersion;
	}

	public void setTaskVersion(Date taskVersion) {
		this.taskVersion = taskVersion;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "FILE_VERSION", nullable = false, length = 19)
	public Date getFileVersion() {
		return this.fileVersion;
	}

	public void setFileVersion(Date fileVersion) {
		this.fileVersion = fileVersion;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "PLAY_VERSION", nullable = false, length = 19)
	public Date getPlayVersion() {
		return this.playVersion;
	}

	public void setPlayVersion(Date playVersion) {
		this.playVersion = playVersion;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "STRATEGY_VERSION", nullable = false, length = 19)
	public Date getStrategyVersion() {
		return this.strategyVersion;
	}

	public void setStrategyVersion(Date strategyVersion) {
		this.strategyVersion = strategyVersion;
	}

	@Column(name = "STATE", nullable = false)
	public int getState() {
		return this.state;
	}

	public void setState(int state) {
		this.state = state;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "CREATE_TIME", nullable = false, length = 19)
	public Date getCreateTime() {
		return this.createTime;
	}

	public void setCreateTime(Date createTime) {
		this.createTime = createTime;
	}

	@Column(name = "CREATE_USER", nullable = false, length = 64)
	public String getCreateUser() {
		return this.createUser;
	}

	public void setCreateUser(String createUser) {
		this.createUser = createUser;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "tbLoopTask")
	public Set<TbLoopProgram> getTbLoopPrograms() {
		return this.tbLoopPrograms;
	}

	public void setTbLoopPrograms(Set<TbLoopProgram> tbLoopPrograms) {
		this.tbLoopPrograms = tbLoopPrograms;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "tbLoopTask")
	public Set<TbLoopSource> getTbLoopSources() {
		return this.tbLoopSources;
	}

	public void setTbLoopSources(Set<TbLoopSource> tbLoopSources) {
		this.tbLoopSources = tbLoopSources;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "tbLoopTask")
	public Set<TbStrategy> getTbStrategies() {
		return this.tbStrategies;
	}

	public void setTbStrategies(Set<TbStrategy> tbStrategies) {
		this.tbStrategies = tbStrategies;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "tbLoopTask")
	public Set<TbTerminal> getTbTerminals() {
		return this.tbTerminals;
	}

	public void setTbTerminals(Set<TbTerminal> tbTerminals) {
		this.tbTerminals = tbTerminals;
	}

}
